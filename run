#!/bin/sh

check_node_version() {
  node_version=$(node -v | cut -c 2-)
  if [ "$(printf '%s\n' "14" "$node_version" | sort -V | head -n1)" = "14" ]; then
    echo >&2 "Node.js version 14 or above is installed. Continuing..."
  else
    echo >&2 "Node.js version 14 or above is required. Exiting..."
    exit 1
  fi
}
check_node_version

kill_all_processes() {
  printf "\n**Attempting a graceful shutdown**\n"
  kill -15 "$PID_1" &&
  printf "**Successfully terminated Core Library process [%s]**\n" "$PID_1"
  kill -15 "$PID_2" &&
  printf "**Successfully terminated React process [%s]**\n" "$PID_2"
  rm -rf local.dev.log &&
  printf "**Successfully deleted log file at [./local.dev.log]**\n"
  exit 0
}

if [ "$1" = "init" ]; then
    shift
    cd core &&
    npm i &&
    cd ../web &&
    npm i &&
    npm link ../core &&
    cd ..
elif [ "$1" = "docker:start" ]; then
    shift
    if [ "$(docker images -q hiramlabs/openresty 2> /dev/null)" = "" ]; then
        docker build -t hiramlabs/openresty "$@" .
    fi
    docker run \
        "$@" \
        -d \
        -p 9001:80 \
        --name openresty \
        --restart=unless-stopped \
        hiramlabs/openresty
elif [ "$1" = "docker:stop" ]; then
    shift
    docker stop "$@" openresty
elif [ "$1" = "dev:start" ]; then
    shift
    trap kill_all_processes INT TERM QUIT
    npm --prefix core run dev --color=always 2>&1 >>local.dev.log &
    PID_1=$!
    npm --prefix  web run start --color=always 2>&1 >>local.dev.log &
    PID_2=$!
    tail -f local.dev.log
else
  echo >&2 "Invalid or no argument(s) provided for run."
fi
